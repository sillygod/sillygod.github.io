3:I[9275,[],""]
5:I[1343,[],""]
6:I[212,["212","static/chunks/212-2aca30d604cdc9d7.js","64","static/chunks/app/blog/%5Bslug%5D/not-found-b8c156f2806391ab.js"],"default"]
7:I[231,["212","static/chunks/212-2aca30d604cdc9d7.js","231","static/chunks/231-5dbfee2b74233369.js","590","static/chunks/590-b6bfb0b386b383c3.js","308","static/chunks/app/blog/%5Bslug%5D/page-0d3972926c3cfd3e.js"],""]
8:I[5682,["370","static/chunks/253d1f49-51a9224b4b90a414.js","212","static/chunks/212-2aca30d604cdc9d7.js","231","static/chunks/231-5dbfee2b74233369.js","590","static/chunks/590-b6bfb0b386b383c3.js","185","static/chunks/app/layout-2b427f6844bd1bb4.js"],"RiveFileComponent"]
4:["slug","2016-08-18-understanding-rest-framework-serializer","d"]
9:T1d77,M2248 2951 c-89 -35 -139 -90 -175 -192 -30 -86 -34 -200 -9 -250 15 -30 15 -34 0 -50 -15 -17 -19 -15 -71 27 -59 48 -163 104 -230 124 -37 11 -45 11 -68 -4 -50 -33 -89 -127 -120 -291 -12 -62 -21 -80 -48 -107 -87 -86 -154 -193 -198 -321 -16 -45 -32 -81 -36 -79 -54 20 -109 30 -116 23 -15 -15 0 -29 53 -46 27 -9 52 -21 56 -26 3 -5 3 -28 -1 -49 -7 -40 -7 -40 -53 -40 -26 0 -53 -4 -61 -9 -26 -16 0 -31 55 -31 l54 0 0 -45 0 -45 -90 0 c-118 0 -180 -14 -243 -57 l-51 -35 -81 24 c-74 22 -80 27 -85 54 -4 24 -14 32 -60 51 -49 19 -56 26 -61 55 -3 19 -8 39 -12 46 -10 16 -160 62 -202 62 -48 0 -108 -26 -138 -60 l-26 -28 -92 29 c-51 17 -96 32 -100 35 -4 2 -5 20 -2 39 7 42 -3 96 -22 121 -13 17 -14 2 -15 -133 l0 -151 63 20 64 21 168 -59 c119 -41 170 -54 173 -46 2 7 15 26 29 42 26 31 53 40 53 16 0 -8 24 -21 58 -31 31 -10 60 -21 65 -24 4 -4 -111 -47 -255 -96 -403 -136 -413 -140 -416 -164 -4 -22 -10 -24 521 161 64 22 120 38 124 34 15 -15 8 -18 -467 -190 -120 -43 -176 -68 -178 -80 -2 -9 1 -16 7 -16 5 0 151 52 324 115 172 63 320 115 328 115 37 -1 -42 -35 -341 -145 -266 -99 -320 -123 -320 -138 0 -14 5 -18 17 -14 63 18 656 247 677 261 32 20 33 50 4 70 -12 9 -18 16 -12 16 8 0 116 -34 171 -55 9 -3 10 -12 2 -34 -9 -26 -21 -33 -92 -57 -138 -45 -509 -185 -559 -210 -58 -30 -80 -60 -86 -124 l-4 -49 -59 -12 c-48 -9 -59 -15 -59 -31 0 -16 5 -19 23 -15 59 15 97 18 97 10 0 -5 -27 -15 -60 -21 -48 -10 -60 -17 -60 -31 0 -18 3 -18 53 -5 28 7 55 14 58 14 3 0 13 -18 21 -39 19 -49 42 -61 458 -243 625 -275 771 -339 944 -417 99 -45 188 -81 199 -81 29 0 767 389 821 432 26 21 30 31 29 66 -3 70 -23 94 -130 155 -54 31 -117 63 -141 73 -24 9 -41 18 -38 21 8 8 228 -60 837 -258 186 -60 340 -109 344 -109 3 0 5 12 3 27 -3 23 -12 29 -68 48 -46 15 -65 26 -64 38 0 10 1 40 2 67 2 37 6 50 17 50 26 0 76 54 84 90 11 49 -4 94 -40 124 l-30 26 25 62 c13 35 36 103 50 152 24 83 26 101 25 290 -1 110 -4 190 -6 176 -29 -168 -71 -359 -99 -460 -45 -159 -58 -190 -81 -190 -43 1 -44 12 -7 120 52 156 89 311 128 540 51 302 59 377 54 571 -4 155 -7 183 -31 256 -15 45 -43 105 -63 134 -19 29 -37 57 -41 62 -3 5 8 0 24 -13 32 -23 62 -59 100 -120 l22 -35 1 75 c0 75 -1 76 -37 112 -65 61 -161 107 -373 180 -372 127 -680 177 -802 129z m286 -77 c185 -34 513 -126 629 -178 100 -44 188 -169 228 -323 59 -232 -23 -886 -164 -1302 l-42 -124 -65 -18 c-36 -10 -66 -18 -66 -19 -1 0 -4 26 -8 58 -6 54 -3 65 49 192 158 380 225 660 226 950 1 95 -4 148 -20 214 -29 121 -93 238 -117 214 -2 -3 9 -34 25 -69 56 -119 66 -176 66 -374 0 -178 -6 -228 -45 -405 -19 -82 -79 -269 -135 -417 -25 -67 -29 -72 -51 -67 -15 4 -24 2 -24 -5 0 -6 9 -11 20 -11 24 0 24 2 3 -46 l-17 -39 -13 65 c-35 160 -106 437 -147 563 -34 108 -40 137 -28 132 16 -6 239 -72 257 -75 23 -5 25 1 10 30 -29 57 -10 242 35 330 27 53 25 71 -5 37 -39 -44 -68 -156 -69 -264 -1 -89 -2 -93 -21 -88 -11 3 -69 20 -130 39 l-109 34 -14 43 c-36 112 -89 242 -133 332 -43 87 -46 98 -28 92 41 -13 355 -95 424 -111 39 -9 78 -20 87 -25 33 -17 35 -9 12 38 -13 25 -24 59 -24 74 0 15 -4 31 -10 34 -15 9 -23 -42 -12 -75 13 -36 12 -36 -70 -10 -35 11 -151 42 -256 69 -171 44 -196 53 -221 80 -21 22 -38 31 -61 31 -34 0 -119 -32 -162 -62 -20 -14 -28 -15 -32 -6 -3 9 -9 8 -20 -6 -8 -10 -17 -22 -18 -27 -2 -6 -145 18 -156 27 -2 1 -1 12 3 24 6 20 11 21 66 15 71 -8 81 9 15 26 -55 14 -66 39 -66 144 0 111 43 209 110 248 63 38 136 41 294 11z m-720 -369 c39 -19 93 -51 121 -72 l50 -37 -60 -12 c-84 -18 -89 -17 -107 14 -9 15 -28 40 -43 56 -21 23 -28 26 -40 16 -13 -11 -10 -19 20 -60 19 -26 35 -50 35 -52 0 -3 -17 -10 -38 -16 -40 -12 -80 -47 -68 -59 3 -4 44 5 89 20 69 23 127 34 127 25 0 -2 -11 -25 -25 -52 -25 -49 -33 -110 -16 -120 4 -3 48 37 95 89 48 52 94 95 102 95 20 0 18 -8 -16 -47 -36 -41 -80 -125 -80 -153 0 -36 34 -22 95 41 57 57 145 129 159 129 4 0 -1 -11 -10 -25 -16 -25 -12 -45 9 -45 7 0 47 26 90 58 89 66 174 113 192 105 26 -9 148 -274 215 -467 39 -110 69 -200 68 -200 -217 -98 -232 -131 -60 -131 88 0 111 -6 112 -27 0 -4 -27 -19 -59 -34 -66 -29 -96 -56 -88 -77 6 -16 61 -33 134 -43 50 -6 53 -8 63 -43 5 -20 10 -39 10 -43 0 -4 -31 -16 -68 -28 -78 -22 -112 -49 -88 -69 17 -14 154 -41 172 -34 8 3 14 -1 14 -9 0 -9 -26 -23 -68 -36 -83 -27 -108 -43 -99 -66 9 -23 86 -56 147 -63 28 -3 52 -9 54 -12 2 -3 6 -27 10 -52 l7 -46 -55 -7 c-75 -8 -108 -24 -104 -50 2 -13 12 -22 26 -24 12 -2 22 -6 22 -10 0 -4 -34 -26 -76 -50 l-75 -43 -162 50 c-230 71 -310 90 -402 97 -71 6 -87 4 -140 -19 -33 -13 -79 -28 -102 -32 -39 -6 -44 -5 -52 18 -11 29 -2 71 23 110 22 32 3 47 -26 21 -29 -27 -48 -68 -48 -104 0 -34 -19 -40 -44 -14 -21 20 -20 74 1 119 18 38 15 49 -11 39 -19 -7 -46 -55 -56 -99 l-7 -30 -12 30 c-26 63 21 157 99 199 64 35 122 46 305 59 151 11 160 13 163 33 4 31 -41 44 -147 44 -214 0 -337 -34 -418 -115 l-53 -52 -130 59 c-72 32 -141 58 -155 58 -14 0 -51 -13 -82 -30 -59 -32 -101 -38 -121 -18 -17 17 -15 63 4 99 17 33 14 45 -10 36 -24 -9 -50 -56 -50 -93 -1 -24 -6 -34 -17 -34 -43 0 -61 74 -30 125 25 43 25 45 7 45 -20 0 -66 -57 -66 -81 0 -11 -4 -17 -10 -14 -16 10 -12 47 10 89 24 48 17 63 -18 40 -26 -16 -26 -16 3 16 41 43 71 57 153 71 53 9 92 9 168 -1 208 -26 194 -26 194 3 0 23 -7 28 -55 43 l-55 18 0 52 0 53 53 3 c38 2 52 7 52 18 0 9 -11 16 -30 18 -73 6 -87 17 -66 50 6 10 16 9 45 -8 35 -21 66 -21 66 0 0 5 -23 21 -51 36 -48 24 -51 28 -45 55 20 100 112 265 201 358 51 54 54 60 70 146 24 129 61 235 83 235 3 0 37 -16 76 -35z m-1348 -825 c93 -24 108 -35 60 -44 -22 -4 -45 -19 -62 -39 -15 -18 -30 -31 -33 -30 -3 1 -37 13 -76 26 -38 13 -71 29 -73 36 -5 16 17 14 84 -9 56 -20 91 -20 80 -1 -3 4 -35 17 -71 27 -36 10 -65 22 -65 26 0 6 46 26 66 27 6 1 46 -8 90 -19z m1009 -590 l120 -48 -3 -39 c-2 -21 -5 -39 -6 -40 -4 -4 -310 118 -319 127 -10 9 51 50 73 49 8 0 69 -22 135 -49z m-1170 -180 c13 0 26 -4 29 -9 3 -5 49 -28 102 -51 95 -42 97 -42 135 -27 37 15 39 15 39 -4 0 -32 225 -133 265 -119 14 5 22 1 30 -13 6 -12 54 -40 120 -69 108 -48 111 -49 147 -35 37 15 37 15 40 -11 3 -22 18 -32 111 -75 112 -50 136 -57 174 -44 17 6 22 4 25 -14 2 -18 28 -34 136 -81 l133 -59 64 30 c39 18 65 36 65 45 0 13 4 14 23 5 20 -9 52 3 225 86 283 135 295 142 288 171 -4 13 -3 24 1 24 14 0 73 -40 73 -49 0 -5 3 -16 6 -25 4 -11 -18 -26 -88 -60 -51 -25 -140 -71 -198 -101 -58 -31 -197 -104 -308 -162 l-204 -105 -81 37 c-103 47 -411 184 -627 280 -91 39 -187 82 -215 94 -27 12 -183 79 -345 149 l-295 127 -3 57 -3 57 56 -24 c30 -14 66 -25 80 -25z m537 -27 c49 -21 88 -40 88 -44 0 -4 -19 -15 -43 -24 l-44 -16 -91 38 c-50 21 -92 41 -92 44 0 8 62 38 80 38 8 1 54 -16 102 -36z m2447 -16 c35 -12 63 -26 62 -32 -1 -5 -61 -35 -134 -66 -73 -30 -155 -67 -184 -82 -29 -15 -60 -27 -70 -27 -10 1 -56 14 -103 29 l-85 28 35 18 c129 69 351 155 395 155 11 -1 49 -11 84 -23z m-1073 -92 c74 -30 146 -61 160 -68 l26 -13 -44 -24 -44 -23 -160 63 c-87 34 -160 64 -162 65 -3 2 78 54 86 55 2 0 64 -25 138 -55z m-1094 -11 c45 -19 87 -39 91 -43 4 -4 -12 -16 -37 -25 l-44 -17 -91 38 c-50 21 -91 41 -91 44 0 7 61 37 77 38 6 1 49 -15 95 -35z m2254 3 c-5 -20 -31 -35 -149 -86 -130 -56 -146 -61 -173 -50 l-29 11 74 36 c96 46 275 120 280 116 2 -2 1 -14 -3 -27z m-2911 -100 c121 -52 276 -120 345 -150 69 -30 197 -87 285 -125 162 -71 405 -180 549 -246 43 -20 88 -36 100 -36 19 -1 19 -2 4 -11 -14 -8 -50 4 -160 55 -79 35 -170 76 -203 91 -109 49 -878 386 -990 435 -136 58 -192 86 -200 101 -4 6 6 4 21 -4 16 -8 128 -58 249 -110z m974 -31 l105 -45 -45 -21 -44 -21 -93 39 c-51 22 -94 43 -95 47 -1 5 59 45 68 45 0 0 47 -20 104 -44z m634 -64 l49 -19 -86 -41 -86 -41 -60 20 c-33 12 -60 24 -60 28 0 14 50 31 88 31 20 0 51 9 67 19 38 24 31 24 88 3z m-321 -64 c60 -24 108 -46 108 -49 0 -6 -66 -39 -80 -39 -16 0 -210 82 -210 89 0 8 51 40 65 41 6 0 58 -19 117 -42z0:["IBRJnoQTeRkVXbdcfQwUi",[[["",{"children":["blog",{"children":[["slug","2016-08-18-understanding-rest-framework-serializer","d"],{"children":["__PAGE__?{\"slug\":\"2016-08-18-understanding-rest-framework-serializer\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","2016-08-18-understanding-rest-framework-serializer","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","article",null,{"className":"bg-post_bg text-cool_gray-100 md:w-[70vw] min-h-[70vh] px-4 md:px-16 pb-28 pt-5 mx-auto mt-10 mb-32 rounded-md","children":[["$","p",null,{"className":"md:text-3xl text-center","children":["It's a secret currently. Not open to the public."," "]}],["$","$L6",null,{"placeholder":"empty","src":"/jbassets/notfound.png","alt":"secret","width":400,"height":400,"className":"block m-auto"}]]}],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/1582572e287b4f3b.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","className":"__className_382dff","children":["$","body",null,{"className":"bg-oxford_blue","children":["$","main",null,{"children":["$","div",null,{"className":"container mx-auto px-4 md:px-20","children":[["$","div",null,{"className":"text-sub_gray md:text-xl pt-4 flex justify-between","children":[["$","div",null,{"className":"mr-1","children":["$","$L7",null,{"href":"/","className":"md:mr-1 md:px-4 hover:underline","children":["$","$L8",null,{"className":"inline-block [&>canvas]:inline-block w-[72px] h-[72px]"}]}]}],["$","div",null,{"className":"flex items-center","children":[["$","$L7",null,{"prefetch":false,"href":"/about","className":"mr-1 px-2 md:px-4 hover:underline","children":"About"}],["$","$L7",null,{"prefetch":false,"href":"/blog","className":"mr-1 px-2 md:px-4 hover:underline","children":"Blog"}],["$","$L7",null,{"prefetch":false,"href":"/cv","className":"mr-1 px-2 md:px-4 hover:underline","children":"CV"}]]}]]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","section",null,{"className":"py-8 text-sub_gray ","children":["$","div",null,{"children":[["$","h2",null,{"className":"text-foreground text-3xl md:text-5xl font-bold mb-6","children":"Enjoy crafting new things"}],["$","div",null,{"className":"flex flex-col md:flex-row md:space-x-6 justify-between md:h-[40vh] py-5 my-5 border-image-gradient-bottom border-solid border-b-[1px]","children":[["$","div",null,{"className":"flex flex-col space-y-2","children":[["$","p",null,{"children":"Never stop learning."}],["$","p",null,{"children":"Life is the sum of your daily habits."}],["$","p",null,{"children":"Find things that you enjoy and please"}],["$","p",null,{"children":[["$","span",null,{"className":"text-[12vh]","children":"Do"}],"it."]}]]}],["$","div",null,{"className":"my-4 flex flex-col justify-center","children":[["$","p",null,{"children":"Feel free to connect with me."}],["$","div",null,{"className":"flex flex-row space-x-4","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-mail","children":[["$","rect","18n3k1",{"width":"20","height":"16","x":"2","y":"4","rx":"2"}],["$","path","1ocrg3",{"d":"m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"}],"$undefined"]}]," ",["$","p",null,{"children":"sillygodprodigy@gmail.com"}]]}]]}],["$","div",null,{"className":"h-[30vh] md:h-full pt-5","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","version":"1.0","className":"[&>g]:fill-[#a8ccc0] md:max-w-[30vw] h-full","viewBox":"0 0 346.000000 346.000000","preserveAspectRatio":"xMidYMid meet","children":[["$","metadata",null,{"children":"Created by potrace 1.16, written by Peter Selinger 2001-2019"}],["$","g",null,{"transform":"translate(0.000000,346.000000) scale(0.100000,-0.100000)","fill":"#000000","stroke":"none","children":[["$","path",null,{"d":"M394 3110 c-4 -16 -12 -30 -20 -30 -24 0 -27 -23 -6 -41 13 -10 22 -29 22 -46 0 -41 26 -73 59 -73 15 0 32 5 38 11 17 17 4 39 -23 39 -20 0 -24 5 -24 29 0 23 5 30 23 33 14 2 22 10 22 23 0 13 -8 21 -22 23 -18 3 -23 10 -23 33 0 22 -5 29 -20 29 -15 0 -22 -9 -26 -30z"}],["$","path",null,{"d":"M513 3069 c-13 -13 13 -76 45 -112 15 -17 14 -22 -7 -63 -19 -35 -21 -47 -12 -58 7 -8 19 -12 26 -10 18 7 117 210 113 232 -6 30 -32 18 -56 -26 l-24 -43 -29 46 c-30 47 -38 52 -56 34z"}],["$","path",null,{"d":"M718 3069 c-15 -8 -18 -25 -18 -113 0 -70 4 -108 13 -121 21 -27 37 -9 37 41 0 42 1 44 30 44 66 0 95 86 45 135 -26 27 -75 33 -107 14z"}],["$","path",null,{"d":"M895 3071 c-25 -5 -29 -11 -27 -31 2 -14 7 -68 10 -120 6 -86 9 -95 27 -95 17 0 20 8 23 48 3 43 5 47 28 47 30 0 74 41 74 70 0 29 -26 76 -45 84 -19 7 -48 6 -90 -3z"}],["$","path",null,{"d":"M1160 3062 c-88 -44 -42 -170 53 -146 30 7 34 -3 14 -30 -9 -12 -27 -19 -53 -20 -27 -1 -39 -5 -39 -16 0 -23 43 -39 78 -29 42 12 67 39 77 84 9 39 5 148 -5 165 -10 16 -87 11 -125 -8z"}],["$","path",null,{"d":"$9"}],["$","path",null,{"d":"M2399 2302 c-58 -37 -149 -130 -149 -152 0 -12 19 -24 63 -40 77 -27 119 -53 175 -104 28 -26 46 -36 53 -29 11 11 -12 193 -36 282 -21 80 -37 86 -106 43z m66 -44 c13 -56 32 -198 26 -198 -3 0 -23 14 -45 30 -21 16 -60 37 -87 45 -27 9 -49 20 -49 25 0 13 120 120 135 120 8 0 17 -10 20 -22z"}],["$","path",null,{"d":"M1554 1928 c-89 -82 -51 -231 59 -231 83 0 133 64 125 161 -6 72 -37 102 -104 102 -36 0 -51 -6 -80 -32z"}],["$","path",null,{"d":"M2040 1838 c-48 -33 -72 -70 -77 -120 -11 -93 52 -163 138 -155 84 7 139 70 139 157 0 114 -110 179 -200 118z"}],["$","path",null,{"d":"M247 2824 c-4 -4 -7 -61 -7 -126 0 -108 2 -118 18 -118 11 0 23 9 28 20 9 20 10 20 47 -6 21 -14 45 -24 54 -22 31 6 24 27 -16 54 -23 15 -41 29 -41 33 0 3 16 16 35 29 19 12 35 27 35 32 0 22 -35 23 -71 2 -21 -12 -39 -22 -41 -22 -2 0 -3 28 -3 62 0 49 -3 63 -15 66 -9 1 -19 0 -23 -4z"}],["$","path",null,{"d":"M961 2787 c-6 -6 -11 -19 -11 -28 0 -24 -18 -33 -35 -19 -8 6 -19 8 -26 4 -7 -4 -25 -7 -40 -6 -35 1 -42 -18 -37 -99 3 -46 6 -54 23 -54 17 0 20 8 23 48 3 41 7 49 28 57 39 15 64 -3 64 -45 0 -60 54 -92 94 -55 15 15 -3 43 -24 37 -17 -4 -20 0 -20 23 0 20 6 31 20 35 11 3 20 15 20 25 0 10 -9 22 -20 25 -12 4 -20 15 -20 30 0 26 -22 39 -39 22z"}],["$","path",null,{"d":"M462 2743 c-17 -7 -42 -57 -42 -86 0 -58 80 -104 136 -78 42 19 27 46 -25 46 -69 0 -64 23 6 27 50 3 58 6 61 24 2 11 -7 32 -18 47 -17 22 -29 27 -63 26 -23 0 -48 -3 -55 -6z"}],["$","path",null,{"d":"M646 2729 c-35 -28 -37 -95 -3 -127 32 -31 81 -38 112 -18 34 22 23 49 -16 41 -33 -8 -72 2 -64 16 4 5 28 9 54 9 62 0 78 17 57 58 -8 16 -23 32 -31 36 -33 12 -83 6 -109 -15z"}],["$","path",null,{"d":"M1103 2735 c-24 -10 -33 -20 -33 -38 0 -29 14 -43 53 -52 40 -11 33 -25 -14 -25 -33 0 -40 -3 -37 -17 6 -30 50 -38 94 -17 32 16 39 24 39 49 0 25 -5 32 -32 40 -43 14 -52 25 -20 25 28 0 45 17 31 30 -18 16 -50 19 -81 5z"}],["$","path",null,{"d":"M503 2436 c-78 -35 -69 -141 13 -162 38 -10 79 7 79 31 0 17 -6 20 -34 17 -60 -5 -87 49 -34 69 22 8 30 6 54 -17 29 -27 49 -25 49 5 0 23 -38 58 -70 65 -14 3 -39 -1 -57 -8z"}],["$","path",null,{"d":"M691 2437 c-55 -32 -65 -94 -22 -138 34 -34 98 -40 126 -13 23 23 4 39 -47 39 -62 0 -58 21 4 22 29 1 56 2 61 2 14 2 7 49 -10 70 -22 27 -80 36 -112 18z"}],["$","path",null,{"d":"M963 2440 c-29 -12 -44 -41 -32 -62 5 -9 25 -22 45 -28 49 -17 40 -22 -48 -29 -5 -1 -8 -8 -8 -16 0 -40 98 -36 135 5 27 29 8 65 -42 78 -34 9 -35 10 -10 11 31 1 48 28 26 42 -17 11 -37 10 -66 -1z"}],["$","path",null,{"d":"M266 2204 c-3 -9 -6 -31 -6 -50 0 -30 -3 -34 -25 -34 -36 0 -75 -42 -75 -80 0 -49 31 -72 93 -68 l52 3 3 123 c2 115 1 122 -17 122 -10 0 -22 -7 -25 -16z"}],["$","path",null,{"d":"M915 2145 c-5 -2 -22 -6 -37 -9 -100 -22 -82 -166 19 -154 20 3 33 0 33 -7 0 -23 -37 -45 -73 -45 -30 0 -37 -4 -37 -19 0 -22 19 -31 62 -31 45 0 97 56 100 107 6 116 5 133 -6 141 -14 12 -48 21 -61 17z"}],["$","path",null,{"d":"M524 2121 c-54 -33 -51 -107 7 -136 37 -19 70 -14 99 17 62 67 -27 168 -106 119z"}],["$","path",null,{"d":"M43 1583 c-24 -8 -43 -19 -43 -25 0 -6 8 -7 18 -3 83 32 99 31 215 -9 62 -21 123 -42 137 -48 22 -8 -1 -18 -173 -76 -111 -37 -197 -72 -197 -79 0 -7 79 15 213 60 148 50 212 76 212 87 0 18 -254 109 -305 109 -19 0 -54 -7 -77 -16z"}],["$","path",null,{"d":"M0 568 c0 -19 19 -33 116 -83 144 -75 173 -97 156 -118 -7 -8 -71 -41 -142 -73 -97 -43 -130 -63 -130 -76 0 -10 3 -18 6 -18 3 0 58 23 121 51 63 28 117 48 120 45 5 -5 -183 -97 -227 -111 -18 -6 -30 -45 -13 -45 3 0 60 25 126 56 66 30 122 53 124 50 3 -3 -19 -16 -48 -29 -192 -87 -209 -97 -209 -116 0 -19 1 -19 52 3 147 65 246 117 252 132 3 9 1 32 -6 50 -10 28 -9 36 5 52 24 26 21 65 -5 89 -13 11 -85 53 -160 93 -131 68 -138 70 -138 48z"}],["$","path",null,{"d":"M2775 494 c-101 -66 -247 -135 -435 -205 -177 -66 -235 -93 -373 -172 -49 -28 -125 -65 -170 -84 l-82 -33 52 0 c61 0 105 18 245 98 109 63 214 109 368 165 140 51 311 130 391 182 38 25 76 45 83 45 7 0 73 -29 147 -64 165 -79 428 -186 455 -186 2 0 4 8 4 18 0 15 -23 27 -102 57 -57 21 -191 78 -298 127 -107 49 -199 91 -205 93 -5 3 -41 -16 -80 -41z"}],["$","path",null,{"d":"M2763 365 c-64 -14 -186 -70 -238 -109 -81 -62 -135 -139 -135 -195 0 -62 -3 -61 175 -61 l162 0 149 61 c81 33 180 72 218 86 39 14 79 32 89 41 16 14 19 14 27 2 14 -22 -4 -34 -115 -74 -55 -21 -142 -54 -193 -74 -90 -36 -92 -37 -53 -40 21 -2 56 4 78 13 21 9 72 29 113 45 41 15 99 37 128 49 28 11 52 18 52 15 0 -7 -129 -66 -210 -95 l-65 -24 50 -3 c40 -2 69 5 138 34 93 39 127 69 127 115 0 158 -253 267 -497 214z m132 -40 c-69 -15 -156 -48 -201 -76 -17 -10 -44 -19 -60 -19 -16 0 -44 -9 -62 -20 -32 -20 -64 -73 -56 -94 2 -6 -7 -24 -20 -41 -23 -28 -26 -29 -42 -13 -25 25 -11 61 49 120 93 92 252 156 387 156 l65 0 -60 -13z m215 -37 c88 -46 79 -68 -50 -114 -41 -14 -140 -54 -220 -87 -128 -53 -154 -61 -225 -64 -97 -5 -116 4 -91 41 9 14 25 26 36 26 26 0 99 66 106 95 4 17 27 33 85 59 154 70 277 85 359 44z"}]]}]]}]}]]}],["$","div",null,{"className":"pt-4 flex flex-row justify-between","children":[["$","p",null,{"className":"text-sm","children":"© Jing 2024. All rights reserved. "}],["$","div",null,{"className":"flex space-x-2 md:space-x-4","children":[["$","$L7",null,{"rel":"noreferrer noopenner","target":"_blank","href":"https://www.linkedin.com/in/yejingsin/","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-linkedin","children":[["$","path","c2jq9f",{"d":"M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"}],["$","rect","mk3on5",{"width":"4","height":"12","x":"2","y":"9"}],["$","circle","bt5ra8",{"cx":"4","cy":"4","r":"2"}],"$undefined"]}]}],["$","$L7",null,{"rel":"noreferrer noopenner","target":"_blank","href":"https://github.com/sillygod","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-github","children":[["$","path","tonef",{"d":"M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"}],["$","path","9comsn",{"d":"M9 18c-4.51 2-5-2-7-2"}],"$undefined"]}]}],["$","$L7",null,{"rel":"noreferrer noopenner","target":"_blank","href":"https://twitter.com/hanzawaYe","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-twitter","children":[["$","path","pff0z6",{"d":"M22 4s-.7 2.1-2 3.4c1.6 10-9.4 17.3-18 11.6 2.2.1 4.4-.6 6-2C3 15.5.5 9.6 3 5c2.2 2.6 5.6 4.1 9 4-.9-4.2 4-6.6 7-3.8 1.1 0 3-1.2 3-1.2z"}],"$undefined"]}]}]]}]]}]]}]}]]}]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0ad0ab9b40cdde8a.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/87290f3b5fefcf4f.css","precedence":"next","crossOrigin":"$undefined"}]],[null,"$La"]]]]]
2:[["$","div",null,{"className":"z-[-1] top-0 left-0 fixed w-[100vw] h-[100vh] post-bg"}],["$","article",null,{"className":"bg-post_bg text-cool_gray-100 md:w-[70vw] min-h-[70vh] px-4 md:px-16 pb-28 pt-5 mx-auto mt-10 mb-32 rounded-md","children":[[["$","h1",null,{"className":"text-2xl md:text-5xl tracking-tighter leading-tight my-6 md:my-12 text-center","children":"rest framework serializer 深入理解"}],["$","div",null,{"className":"mb-8 md:mb-16 sm:mx-0","children":"$undefined"}],["$","div",null,{"className":"max-w-2xl","children":[["$","div",null,{"children":[["$","$L7","rest framework",{"href":"/blog/?tag=rest framework","children":["$","span","rest framework",{"className":"inline-block bg-cool_gray-200 rounded-full px-3 py-1 text-xs md:text-sm font-semibold text-cool_gray-700 mr-2 mb-2","children":["# ","rest framework"]}]}]]}],["$","div",null,{"className":"text-cool_gray-400 mb-6 text-sm md:text-lg","children":["$","time",null,{"dateTime":"2016-08-18 01:44","children":"August\t18, 2016"}]}]]}]],["$","div",null,{"children":["$","div",null,{"className":"org-styles_org__9g_Bq","children":[["$","h1","h1-0",{"children":"rest framework serializer 深入理解"}],"\n",["$","p","p-0",{"children":"這篇主要是記錄一些個人對於rest framework的serializer源碼實作的理解，從下段源碼"}],"\n",["$","pre","pre-0",{"children":["$","code","code-0",{"className":"hljs language-python","children":[["$","span","span-0",{"className":"hljs-meta","children":["@six.add_metaclass(",["$","span","span-0",{"className":"hljs-params","children":"SerializerMetaclass"}],")"]}],"\n",["$","span","span-1",{"className":"hljs-keyword","children":"class"}]," ",["$","span","span-2",{"className":"hljs-title class_","children":"Serializer"}],"(",["$","span","span-3",{"className":"hljs-title class_ inherited__","children":"BaseSerializer"}],"):\n\t....\n"]}]}],"\n",["$","p","p-1",{"children":["可以看到作為ModelSerializer還有一些xxSerializer的",["$","strong","strong-0",{"children":"base class(Serializer)"}],"，是繼承BaseSerializer，以及還有個metaclass，首先我們就先來看看meta class這邊，它用到了six這個third party library，這模組主要目的是幫你弄出python2和3 compatible的code，",["$","code","code-0",{"children":"@six.add_metaclass"}],"這個東西作用如下，"]}],"\n",["$","pre","pre-1",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-meta","children":["@six.add_metaclass(",["$","span","span-0",{"className":"hljs-params","children":"SerializerMetaclass"}],")"]}],"\n",["$","span","span-1",{"className":"hljs-keyword","children":"class"}]," ",["$","span","span-2",{"className":"hljs-title class_","children":"Serializer"}],"(",["$","span","span-3",{"className":"hljs-title class_ inherited__","children":"BaseSerializer"}],"):\n\t",["$","span","span-4",{"className":"hljs-keyword","children":"pass"}],"\n\t\n",["$","span","span-5",{"className":"hljs-comment","children":"# to python2"}],"\n\n",["$","span","span-6",{"className":"hljs-keyword","children":"class"}]," ",["$","span","span-7",{"className":"hljs-title class_","children":"Serializer"}],"(",["$","span","span-8",{"className":"hljs-title class_ inherited__","children":"BaseSerializer"}],"):\n\t__metaclass__ = SerializerMetaclass\n\t\n\t",["$","span","span-9",{"className":"hljs-keyword","children":"pass"}],"\n\t\n",["$","span","span-10",{"className":"hljs-comment","children":"# to python3"}],"\n\n",["$","span","span-11",{"className":"hljs-keyword","children":"class"}]," ",["$","span","span-12",{"className":"hljs-title class_","children":"Serializer"}],"(BaseSerializer, metaclass=SerializerMetaclass):\n\t",["$","span","span-13",{"className":"hljs-keyword","children":"pass"}],"\n\t\n"]}]}],"\n",["$","p","p-2",{"children":["至於對於metaclass的作用，這邊我不多加敘述，詳情可以看我之前的blog，有篇是對於metaclass的理解，SerializerMetaclass做的事情，基本上是在我們new instance時，把attribute屬於Field的instance給濾出來～ 這個Field是rest framework fields.py裡面有所定義，濾出來後呢，接著按照_creation_counter來排序，之後把這些給assgin到",["$","code","code-0",{"children":"_declared_fields"}],"看到這邊目前不知道為什麼要作這個動作，不過我相信我們繼續看下去應該就會知道為什麼了？ 這個metaclass做的事情就是這樣而已。"]}],"\n",["$","p","p-3",{"children":"接著由於BaseSerializer是繼承Field，所以我們先來看看Field是作什麼"}],"\n",["$","pre","pre-2",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-keyword","children":"class"}]," ",["$","span","span-1",{"className":"hljs-title class_","children":"Field"}],"(",["$","span","span-2",{"className":"hljs-title class_ inherited__","children":"object"}],"):\n\n    _creation_counter = ",["$","span","span-3",{"className":"hljs-number","children":"0"}],"\n    ",["$","span","span-4",{"className":"hljs-comment","children":"# 用來做欄位排序～ 疑你想說哪邊有做排序"}],"\n    ",["$","span","span-5",{"className":"hljs-comment","children":"# 目前而言我們看到在metaclass那邊他有利用這個屬性來做排序（我沒有貼源碼上來）"}],"\n\n    default_error_messages = {\n        ",["$","span","span-6",{"className":"hljs-string","children":"'required'"}],": _(",["$","span","span-7",{"className":"hljs-string","children":"'This field is required.'"}],"),\n        ",["$","span","span-8",{"className":"hljs-string","children":"'null'"}],": _(",["$","span","span-9",{"className":"hljs-string","children":"'This field may not be null.'"}],")\n    }\n    default_validators = []\n    default_empty_html = empty\n    initial = ",["$","span","span-10",{"className":"hljs-literal","children":"None"}],"\n\n    ",["$","span","span-11",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-12",{"className":"hljs-title function_","children":"__init__"}],"(",["$","span","span-13",{"className":"hljs-params","children":["self, read_only=",["$","span","span-0",{"className":"hljs-literal","children":"False"}],", write_only=",["$","span","span-1",{"className":"hljs-literal","children":"False"}],",\n                 required=",["$","span","span-2",{"className":"hljs-literal","children":"None"}],", default=empty, initial=empty, source=",["$","span","span-3",{"className":"hljs-literal","children":"None"}],",\n                 label=",["$","span","span-4",{"className":"hljs-literal","children":"None"}],", help_text=",["$","span","span-5",{"className":"hljs-literal","children":"None"}],", style=",["$","span","span-6",{"className":"hljs-literal","children":"None"}],",\n                 error_messages=",["$","span","span-7",{"className":"hljs-literal","children":"None"}],", validators=",["$","span","span-8",{"className":"hljs-literal","children":"None"}],", allow_null=",["$","span","span-9",{"className":"hljs-literal","children":"False"}]]}],"):\n        self._creation_counter = Field._creation_counter\n        Field._creation_counter += ",["$","span","span-14",{"className":"hljs-number","children":"1"}],"\n\n        ",["$","span","span-15",{"className":"hljs-comment","children":"# If `required` is unset, then use `True` unless a default is provided."}],"\n        ",["$","span","span-16",{"className":"hljs-keyword","children":"if"}]," required ",["$","span","span-17",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-18",{"className":"hljs-literal","children":"None"}],":\n            required = default ",["$","span","span-19",{"className":"hljs-keyword","children":"is"}]," empty ",["$","span","span-20",{"className":"hljs-keyword","children":"and"}]," ",["$","span","span-21",{"className":"hljs-keyword","children":"not"}]," read_only\n            ",["$","span","span-22",{"className":"hljs-comment","children":"# 這邊而言我的確不懂為什麼default要用emtpy，但是這邊註解寫的清楚，沒有給required時預設就是True"}],"\n\n        ",["$","span","span-23",{"className":"hljs-comment","children":"# Some combinations of keyword arguments do not make sense."}],"\n        ",["$","span","span-24",{"className":"hljs-keyword","children":"assert"}]," ",["$","span","span-25",{"className":"hljs-keyword","children":"not"}]," (read_only ",["$","span","span-26",{"className":"hljs-keyword","children":"and"}]," write_only), NOT_READ_ONLY_WRITE_ONLY\n        ",["$","span","span-27",{"className":"hljs-keyword","children":"assert"}]," ",["$","span","span-28",{"className":"hljs-keyword","children":"not"}]," (read_only ",["$","span","span-29",{"className":"hljs-keyword","children":"and"}]," required), NOT_READ_ONLY_REQUIRED\n        ",["$","span","span-30",{"className":"hljs-keyword","children":"assert"}]," ",["$","span","span-31",{"className":"hljs-keyword","children":"not"}]," (required ",["$","span","span-32",{"className":"hljs-keyword","children":"and"}]," default ",["$","span","span-33",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-34",{"className":"hljs-keyword","children":"not"}]," empty), NOT_REQUIRED_DEFAULT\n        ",["$","span","span-35",{"className":"hljs-keyword","children":"assert"}]," ",["$","span","span-36",{"className":"hljs-keyword","children":"not"}]," (read_only ",["$","span","span-37",{"className":"hljs-keyword","children":"and"}]," self.__class__ == Field), USE_READONLYFIELD\n        ",["$","span","span-38",{"className":"hljs-comment","children":"# 這邊做的事就只是檢查一些不合理的flag設置比如第一個你同時設置read_only和write_only為True"}],"\n        ",["$","span","span-39",{"className":"hljs-comment","children":"# 有夠不合理吧 :)"}],"\n\n        self.read_only = read_only\n        self.write_only = write_only\n        self.required = required\n        self.default = default\n        self.source = source\n        self.initial = self.initial ",["$","span","span-40",{"className":"hljs-keyword","children":"if"}]," (initial ",["$","span","span-41",{"className":"hljs-keyword","children":"is"}]," empty) ",["$","span","span-42",{"className":"hljs-keyword","children":"else"}]," initial\n        self.label = label\n        self.help_text = help_text\n        self.style = {} ",["$","span","span-43",{"className":"hljs-keyword","children":"if"}]," style ",["$","span","span-44",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-45",{"className":"hljs-literal","children":"None"}]," ",["$","span","span-46",{"className":"hljs-keyword","children":"else"}]," style\n        self.allow_null = allow_null\n\n        ",["$","span","span-47",{"className":"hljs-keyword","children":"if"}]," self.default_empty_html ",["$","span","span-48",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-49",{"className":"hljs-keyword","children":"not"}]," empty:\n            ",["$","span","span-50",{"className":"hljs-keyword","children":"if"}]," default ",["$","span","span-51",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-52",{"className":"hljs-keyword","children":"not"}]," empty:\n                self.default_empty_html = default\n\n        ",["$","span","span-53",{"className":"hljs-keyword","children":"if"}]," validators ",["$","span","span-54",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-55",{"className":"hljs-keyword","children":"not"}]," ",["$","span","span-56",{"className":"hljs-literal","children":"None"}],":\n            self.validators = validators[:]\n\n        ",["$","span","span-57",{"className":"hljs-comment","children":"# These are set up by `.bind()` when the field is added to a serializer."}],"\n        self.field_name = ",["$","span","span-58",{"className":"hljs-literal","children":"None"}],"\n        self.parent = ",["$","span","span-59",{"className":"hljs-literal","children":"None"}],"\n\n        ",["$","span","span-60",{"className":"hljs-comment","children":"# Collect default error message from self and parent classes"}],"\n        messages = {}\n        ",["$","span","span-61",{"className":"hljs-keyword","children":"for"}]," cls ",["$","span","span-62",{"className":"hljs-keyword","children":"in"}]," ",["$","span","span-63",{"className":"hljs-built_in","children":"reversed"}],"(self.__class__.__mro__):\n            messages.update(",["$","span","span-64",{"className":"hljs-built_in","children":"getattr"}],"(cls, ",["$","span","span-65",{"className":"hljs-string","children":"'default_error_messages'"}],", {}))\n        messages.update(error_messages ",["$","span","span-66",{"className":"hljs-keyword","children":"or"}]," {})\n        self.error_messages = messages\n        ",["$","span","span-67",{"className":"hljs-comment","children":"# 這邊可以注意 message: key-pair 被覆蓋的順序～"}],"\n\n"]}]}],"\n",["$","p","p-4",{"children":"關於init函式，一些需要注意的地方我都寫在註解上面了，當然有些參數目前還不知道是要做啥，但是不明的東西就先打個問號，因為你在怎麼執著於這邊，你也不知道答案是什麼，必須要看到其他地方式怎麼使用這些參數的或函式，才會比較明瞭，所以姑且就繼續往下看吧"}],"\n",["$","pre","pre-3",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"bind"}],"(",["$","span","span-2",{"className":"hljs-params","children":"self, field_name, parent"}],"):\n        ",["$","span","span-3",{"className":"hljs-string","children":"\"\"\"\n        Initializes the field name and parent for the field instance.\n        Called when a field is added to the parent serializer instance.\n        \"\"\""}],"\n\n        ",["$","span","span-4",{"className":"hljs-comment","children":"# In order to enforce a consistent style, we error if a redundant"}],"\n        ",["$","span","span-5",{"className":"hljs-comment","children":"# 'source' argument has been used. For example:"}],"\n        ",["$","span","span-6",{"className":"hljs-comment","children":"# my_field = serializer.CharField(source='my_field')"}],"\n        ",["$","span","span-7",{"className":"hljs-keyword","children":"assert"}]," self.source != field_name, (\n            ",["$","span","span-8",{"className":"hljs-string","children":"\"It is redundant to specify `source='%s'` on field '%s' in \""}],"\n            ",["$","span","span-9",{"className":"hljs-string","children":"\"serializer '%s', because it is the same as the field name. \""}],"\n            ",["$","span","span-10",{"className":"hljs-string","children":"\"Remove the `source` keyword argument.\""}]," %\n            (field_name, self.__class__.__name__, parent.__class__.__name__)\n        )\n\n        self.field_name = field_name\n        self.parent = parent\n\n        ",["$","span","span-11",{"className":"hljs-comment","children":"# `self.label` should default to being based on the field name."}],"\n        ",["$","span","span-12",{"className":"hljs-keyword","children":"if"}]," self.label ",["$","span","span-13",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-14",{"className":"hljs-literal","children":"None"}],":\n            self.label = field_name.replace(",["$","span","span-15",{"className":"hljs-string","children":"'_'"}],", ",["$","span","span-16",{"className":"hljs-string","children":"' '"}],").capitalize()\n\n        ",["$","span","span-17",{"className":"hljs-comment","children":"# self.source should default to being the same as the field name."}],"\n        ",["$","span","span-18",{"className":"hljs-keyword","children":"if"}]," self.source ",["$","span","span-19",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-20",{"className":"hljs-literal","children":"None"}],":\n            self.source = field_name\n\n        ",["$","span","span-21",{"className":"hljs-comment","children":"# self.source_attrs is a list of attributes that need to be looked up"}],"\n        ",["$","span","span-22",{"className":"hljs-comment","children":"# when serializing the instance, or populating the validated data."}],"\n        ",["$","span","span-23",{"className":"hljs-keyword","children":"if"}]," self.source == ",["$","span","span-24",{"className":"hljs-string","children":"'*'"}],":\n            ",["$","span","span-25",{"className":"hljs-comment","children":"# magic star!!  雖然不知道是做啥～ 繼續看下去就會知道了"}],"\n            self.source_attrs = []\n        ",["$","span","span-26",{"className":"hljs-keyword","children":"else"}],":\n            self.source_attrs = self.source.split(",["$","span","span-27",{"className":"hljs-string","children":"'.'"}],")\n\n"]}]}],"\n",["$","p","p-5",{"children":"單單這樣看好像挺模糊的，他的assert希望 self.source 和 field_name 一樣，可是好玩的是假如self.source是None的話，self.source = field_name，所以這邊我有點不懂她是在assert啥..."}],"\n",["$","p","p-6",{"children":"再來下面四個method，就比較簡單了，"}],"\n",["$","pre","pre-4",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-meta","children":"@property"}],"\n    ",["$","span","span-1",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-2",{"className":"hljs-title function_","children":"validators"}],"(",["$","span","span-3",{"className":"hljs-params","children":"self"}],"):\n        ",["$","span","span-4",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-5",{"className":"hljs-keyword","children":"not"}]," ",["$","span","span-6",{"className":"hljs-built_in","children":"hasattr"}],"(self, ",["$","span","span-7",{"className":"hljs-string","children":"'_validators'"}],"):\n            self._validators = self.get_validators()\n        ",["$","span","span-8",{"className":"hljs-keyword","children":"return"}]," self._validators\n\n",["$","span","span-9",{"className":"hljs-meta","children":"    @validators.setter"}],"\n    ",["$","span","span-10",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-11",{"className":"hljs-title function_","children":"validators"}],"(",["$","span","span-12",{"className":"hljs-params","children":"self, validators"}],"):\n        self._validators = validators\n\n    ",["$","span","span-13",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-14",{"className":"hljs-title function_","children":"get_validators"}],"(",["$","span","span-15",{"className":"hljs-params","children":"self"}],"):\n        ",["$","span","span-16",{"className":"hljs-keyword","children":"return"}]," self.default_validators[:]\n\n    ",["$","span","span-17",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-18",{"className":"hljs-title function_","children":"get_initial"}],"(",["$","span","span-19",{"className":"hljs-params","children":"self"}],"):\n        ",["$","span","span-20",{"className":"hljs-string","children":"\"\"\"\n        Return a value to use when the field is being returned as a primitive\n        value, without any object instance.\n        \"\"\""}],"\n        ",["$","span","span-21",{"className":"hljs-keyword","children":"return"}]," self.initial\n        \n"]}]}],"\n",["$","p","p-7",{"children":"雖然我個人覺得啦，她分的好細，乍看之下或許有點多餘，不過看久了到是覺得還好，反正邏輯很簡單，只要沒有做過 self.validators = .... 那她就會使用 self.default_validators[:] 來回傳結果～"}],"\n",["$","pre","pre-5",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"get_value"}],"(",["$","span","span-2",{"className":"hljs-params","children":"self, dictionary"}],"):\n        ",["$","span","span-3",{"className":"hljs-string","children":"\"\"\"\n        Given the *incoming* primitive data, return the value for this field\n        that should be validated and transformed to a native value.\n        \"\"\""}],"\n        ",["$","span","span-4",{"className":"hljs-keyword","children":"if"}]," html.is_html_input(dictionary):\n            ",["$","span","span-5",{"className":"hljs-comment","children":"# HTML forms will represent empty fields as '', and cannot"}],"\n            ",["$","span","span-6",{"className":"hljs-comment","children":"# represent None or False values directly."}],"\n            ",["$","span","span-7",{"className":"hljs-keyword","children":"if"}]," self.field_name ",["$","span","span-8",{"className":"hljs-keyword","children":"not"}]," ",["$","span","span-9",{"className":"hljs-keyword","children":"in"}]," dictionary:\n                ",["$","span","span-10",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-11",{"className":"hljs-built_in","children":"getattr"}],"(self.root, ",["$","span","span-12",{"className":"hljs-string","children":"'partial'"}],", ",["$","span","span-13",{"className":"hljs-literal","children":"False"}],"):\n                    ",["$","span","span-14",{"className":"hljs-keyword","children":"return"}]," empty\n                ",["$","span","span-15",{"className":"hljs-keyword","children":"return"}]," self.default_empty_html\n            ret = dictionary[self.field_name]\n            ",["$","span","span-16",{"className":"hljs-keyword","children":"if"}]," ret == ",["$","span","span-17",{"className":"hljs-string","children":"''"}]," ",["$","span","span-18",{"className":"hljs-keyword","children":"and"}]," self.allow_null:\n                ",["$","span","span-19",{"className":"hljs-comment","children":"# If the field is blank, and null is a valid value then"}],"\n                ",["$","span","span-20",{"className":"hljs-comment","children":"# determine if we should use null instead."}],"\n                ",["$","span","span-21",{"className":"hljs-keyword","children":"return"}]," ",["$","span","span-22",{"className":"hljs-string","children":"''"}]," ",["$","span","span-23",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-24",{"className":"hljs-built_in","children":"getattr"}],"(self, ",["$","span","span-25",{"className":"hljs-string","children":"'allow_blank'"}],", ",["$","span","span-26",{"className":"hljs-literal","children":"False"}],") ",["$","span","span-27",{"className":"hljs-keyword","children":"else"}]," ",["$","span","span-28",{"className":"hljs-literal","children":"None"}],"\n            ",["$","span","span-29",{"className":"hljs-keyword","children":"elif"}]," ret == ",["$","span","span-30",{"className":"hljs-string","children":"''"}]," ",["$","span","span-31",{"className":"hljs-keyword","children":"and"}]," ",["$","span","span-32",{"className":"hljs-keyword","children":"not"}]," self.required:\n                ",["$","span","span-33",{"className":"hljs-comment","children":"# If the field is blank, and emptyness is valid then"}],"\n                ",["$","span","span-34",{"className":"hljs-comment","children":"# determine if we should use emptyness instead."}],"\n                ",["$","span","span-35",{"className":"hljs-keyword","children":"return"}]," ",["$","span","span-36",{"className":"hljs-string","children":"''"}]," ",["$","span","span-37",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-38",{"className":"hljs-built_in","children":"getattr"}],"(self, ",["$","span","span-39",{"className":"hljs-string","children":"'allow_blank'"}],", ",["$","span","span-40",{"className":"hljs-literal","children":"False"}],") ",["$","span","span-41",{"className":"hljs-keyword","children":"else"}]," empty\n            ",["$","span","span-42",{"className":"hljs-keyword","children":"return"}]," ret\n        ",["$","span","span-43",{"className":"hljs-keyword","children":"return"}]," dictionary.get(self.field_name, empty)\n\n"]}]}],"\n",["$","p","p-8",{"children":"這裡html.is_html_input，是做一個檢查，是什麼呢？ 她檢查 dictionary是否擁有 getlist 這個屬性，很好，值得注意的是這裡的dictionary，似乎是因為有可能會是django的MultiValueDict，這個就會有getlist這個屬性了，相信之後部份code會用到這個method，讓我們就先繼續往下走～～"}],"\n",["$","pre","pre-6",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"get_attribute"}],"(",["$","span","span-2",{"className":"hljs-params","children":"self, instance"}],"):\n        ",["$","span","span-3",{"className":"hljs-string","children":"\"\"\"\n        Given the *outgoing* object instance, return the primitive value\n        that should be used for this field.\n        \"\"\""}],"\n        ",["$","span","span-4",{"className":"hljs-keyword","children":"try"}],":\n            ",["$","span","span-5",{"className":"hljs-keyword","children":"return"}]," get_attribute(instance, self.source_attrs)\n        ",["$","span","span-6",{"className":"hljs-keyword","children":"except"}]," (KeyError, AttributeError) ",["$","span","span-7",{"className":"hljs-keyword","children":"as"}]," exc:\n            ",["$","span","span-8",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-9",{"className":"hljs-keyword","children":"not"}]," self.required ",["$","span","span-10",{"className":"hljs-keyword","children":"and"}]," self.default ",["$","span","span-11",{"className":"hljs-keyword","children":"is"}]," empty:\n                ",["$","span","span-12",{"className":"hljs-keyword","children":"raise"}]," SkipField()\n            msg = (\n                ",["$","span","span-13",{"className":"hljs-string","children":"'Got {exc_type} when attempting to get a value for field '"}],"\n                ",["$","span","span-14",{"className":"hljs-string","children":"'`{field}` on serializer `{serializer}`.\\nThe serializer '"}],"\n                ",["$","span","span-15",{"className":"hljs-string","children":"'field might be named incorrectly and not match '"}],"\n                ",["$","span","span-16",{"className":"hljs-string","children":"'any attribute or key on the `{instance}` instance.\\n'"}],"\n                ",["$","span","span-17",{"className":"hljs-string","children":"'Original exception text was: {exc}.'"}],".",["$","span","span-18",{"className":"hljs-built_in","children":"format"}],"(\n                    exc_type=",["$","span","span-19",{"className":"hljs-built_in","children":"type"}],"(exc).__name__,\n                    field=self.field_name,\n                    serializer=self.parent.__class__.__name__,\n                    instance=instance.__class__.__name__,\n                    exc=exc\n                )\n            )\n            ",["$","span","span-20",{"className":"hljs-keyword","children":"raise"}]," ",["$","span","span-21",{"className":"hljs-built_in","children":"type"}],"(exc)(msg)\n\n"]}]}],"\n",["$","p","p-9",{"children":"這裡有call一個global get_attribue 這個之後看，當發生exception（KeyError, AttribueError）時，這裡做的處理是如果此field非required和default是empty的話，就會raise SkipField（），要不然就是照樣raise該有的錯誤，只是給她額外增加一個比較fancy的錯誤訊息。再來讓我們瞧瞧global的get_attribue到底做了什麼！"}],"\n",["$","pre","pre-7",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"get_attribute"}],"(",["$","span","span-2",{"className":"hljs-params","children":"instance, attrs"}],"):\n    ",["$","span","span-3",{"className":"hljs-string","children":"\"\"\"\n    Similar to Python's built in `getattr(instance, attr)`,\n    but takes a list of nested attributes, instead of a single attribute.\n\n    Also accepts either attribute lookup on objects or dictionary lookups.\n    \"\"\""}],"\n    ",["$","span","span-4",{"className":"hljs-keyword","children":"for"}]," attr ",["$","span","span-5",{"className":"hljs-keyword","children":"in"}]," attrs:\n        ",["$","span","span-6",{"className":"hljs-keyword","children":"if"}]," instance ",["$","span","span-7",{"className":"hljs-keyword","children":"is"}]," ",["$","span","span-8",{"className":"hljs-literal","children":"None"}],":\n            ",["$","span","span-9",{"className":"hljs-comment","children":"# Break out early if we get `None` at any point in a nested lookup."}],"\n            ",["$","span","span-10",{"className":"hljs-keyword","children":"return"}]," ",["$","span","span-11",{"className":"hljs-literal","children":"None"}],"\n        ",["$","span","span-12",{"className":"hljs-keyword","children":"try"}],":\n            ",["$","span","span-13",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-14",{"className":"hljs-built_in","children":"isinstance"}],"(instance, collections.Mapping):\n                instance = instance[attr]\n            ",["$","span","span-15",{"className":"hljs-keyword","children":"else"}],":\n                instance = ",["$","span","span-16",{"className":"hljs-built_in","children":"getattr"}],"(instance, attr)\n        ",["$","span","span-17",{"className":"hljs-keyword","children":"except"}]," ObjectDoesNotExist:\n            ",["$","span","span-18",{"className":"hljs-keyword","children":"return"}]," ",["$","span","span-19",{"className":"hljs-literal","children":"None"}],"\n        ",["$","span","span-20",{"className":"hljs-keyword","children":"if"}]," is_simple_callable(instance):\n            ",["$","span","span-21",{"className":"hljs-keyword","children":"try"}],":\n                instance = instance()\n            ",["$","span","span-22",{"className":"hljs-keyword","children":"except"}]," (AttributeError, KeyError) ",["$","span","span-23",{"className":"hljs-keyword","children":"as"}]," exc:\n                ",["$","span","span-24",{"className":"hljs-comment","children":"# If we raised an Attribute or KeyError here it'd get treated"}],"\n                ",["$","span","span-25",{"className":"hljs-comment","children":"# as an omitted field in `Field.get_attribute()`. Instead we"}],"\n                ",["$","span","span-26",{"className":"hljs-comment","children":"# raise a ValueError to ensure the exception is not masked."}],"\n                ",["$","span","span-27",{"className":"hljs-keyword","children":"raise"}]," ValueError(",["$","span","span-28",{"className":"hljs-string","children":"'Exception raised in callable attribute \"{0}\"; original exception was: {1}'"}],".",["$","span","span-29",{"className":"hljs-built_in","children":"format"}],"(attr, exc))\n\n    ",["$","span","span-30",{"className":"hljs-keyword","children":"return"}]," instance\n\n"]}]}],"\n",["$","p","p-10",{"children":["還記得前面",["$","code","code-0",{"children":"bind"}]," method做了什麼好事嗎？"]}],"\n",["$","pre","pre-8",{"children":["$","code","code-0",{"className":"hljs language-python","children":[["$","span","span-0",{"className":"hljs-keyword","children":"if"}]," self.source == ",["$","span","span-1",{"className":"hljs-string","children":"'*'"}],":\n            self.source_attrs = []\n        ",["$","span","span-2",{"className":"hljs-keyword","children":"else"}],":\n            self.source_attrs = self.source.split(",["$","span","span-3",{"className":"hljs-string","children":"'.'"}],")\n"]}]}],"\n",["$","p","p-11",{"children":["由於經過這樣的處理，所以attrs必定是list型態，所以這邊",["$","code","code-0",{"children":"get_attribute"}],"才會用for loop，其實這個function做的事情，如同他的註解說的差不多，真的就跟python內建的 ",["$","code","code-1",{"children":"getattr"}]," 很像，只是他可以接受nested屬性，例如： ",["$","code","code-2",{"children":"obj.a.c"}]," 這樣。"]}],"\n",["$","pre","pre-9",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"get_default"}],"(",["$","span","span-2",{"className":"hljs-params","children":"self"}],"):\n    ",["$","span","span-3",{"className":"hljs-keyword","children":"pass"}],"\n\n",["$","span","span-4",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-5",{"className":"hljs-title function_","children":"validate_empty_values"}],"(",["$","span","span-6",{"className":"hljs-params","children":"self, data"}],"):\n\t",["$","span","span-7",{"className":"hljs-keyword","children":"pass"}],"\n\n"]}]}],"\n",["$","p","p-12",{"children":"這兩個function就不多琢磨了，就算是helper function這樣"}],"\n",["$","pre","pre-10",{"children":["$","code","code-0",{"className":"hljs language-python","children":[["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"run_validation"}],"(",["$","span","span-2",{"className":"hljs-params","children":"self, data=empty"}],"):\n\t",["$","span","span-3",{"className":"hljs-string","children":"\"\"\"\n\tValidate a simple representation and return the internal value.\n\n\tThe provided data may be `empty` if no representation was included\n\tin the input.\n\n\tMay raise `SkipField` if the field should not be included in the\n\tvalidated data.\n\t\"\"\""}],"\n\t(is_empty_value, data) = self.validate_empty_values(data)\n\t",["$","span","span-4",{"className":"hljs-keyword","children":"if"}]," is_empty_value:\n\t\t",["$","span","span-5",{"className":"hljs-keyword","children":"return"}]," data\n\tvalue = self.to_internal_value(data)\n\tself.run_validators(value)\n\t",["$","span","span-6",{"className":"hljs-keyword","children":"return"}]," value\n\n",["$","span","span-7",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-8",{"className":"hljs-title function_","children":"run_validators"}],"(",["$","span","span-9",{"className":"hljs-params","children":"self, value"}],"):\n\t",["$","span","span-10",{"className":"hljs-string","children":"\"\"\"\n\tTest the given value against all the validators on the field,\n\tand either raise a `ValidationError` or simply return.\n\t\"\"\""}],"\n\terrors = []\n\t",["$","span","span-11",{"className":"hljs-keyword","children":"for"}]," validator ",["$","span","span-12",{"className":"hljs-keyword","children":"in"}]," self.validators:\n\t\t",["$","span","span-13",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-14",{"className":"hljs-built_in","children":"hasattr"}],"(validator, ",["$","span","span-15",{"className":"hljs-string","children":"'set_context'"}],"):\n\t\t\tvalidator.set_context(self)\n\n\t\t",["$","span","span-16",{"className":"hljs-keyword","children":"try"}],":\n\t\t\tvalidator(value)\n\t\t",["$","span","span-17",{"className":"hljs-keyword","children":"except"}]," ValidationError ",["$","span","span-18",{"className":"hljs-keyword","children":"as"}]," exc:\n\t\t\t",["$","span","span-19",{"className":"hljs-comment","children":"# If the validation error contains a mapping of fields to"}],"\n\t\t\t",["$","span","span-20",{"className":"hljs-comment","children":"# errors then simply raise it immediately rather than"}],"\n\t\t\t",["$","span","span-21",{"className":"hljs-comment","children":"# attempting to accumulate a list of errors."}],"\n\t\t\t",["$","span","span-22",{"className":"hljs-keyword","children":"if"}]," ",["$","span","span-23",{"className":"hljs-built_in","children":"isinstance"}],"(exc.detail, ",["$","span","span-24",{"className":"hljs-built_in","children":"dict"}],"):\n\t\t\t\t",["$","span","span-25",{"className":"hljs-keyword","children":"raise"}],"\n\t\t\terrors.extend(exc.detail)\n\t\t",["$","span","span-26",{"className":"hljs-keyword","children":"except"}]," DjangoValidationError ",["$","span","span-27",{"className":"hljs-keyword","children":"as"}]," exc:\n\t\t\terrors.extend(exc.messages)\n\t",["$","span","span-28",{"className":"hljs-keyword","children":"if"}]," errors:\n\t\t",["$","span","span-29",{"className":"hljs-keyword","children":"raise"}]," ValidationError(errors)\n\n"]}]}],"\n",["$","p","p-13",{"children":"這邊就是serializer常用到的validation了，做檢查～\n最後值得注意的地方是下面這兩個function"}],"\n",["$","pre","pre-11",{"children":["$","code","code-0",{"className":"hljs language-python","children":["\n",["$","span","span-0",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-1",{"className":"hljs-title function_","children":"to_internal_value"}],"(",["$","span","span-2",{"className":"hljs-params","children":"self, data"}],"):\n\t",["$","span","span-3",{"className":"hljs-string","children":"\"\"\"\n\tTransform the *incoming* primitive data into a native value.\n\t\"\"\""}],"\n\t",["$","span","span-4",{"className":"hljs-keyword","children":"raise"}]," NotImplementedError(\n\t\t",["$","span","span-5",{"className":"hljs-string","children":"'{cls}.to_internal_value() must be implemented.'"}],".",["$","span","span-6",{"className":"hljs-built_in","children":"format"}],"(\n\t\t\tcls=self.__class__.__name__\n\t\t)\n\t)\n\n",["$","span","span-7",{"className":"hljs-keyword","children":"def"}]," ",["$","span","span-8",{"className":"hljs-title function_","children":"to_representation"}],"(",["$","span","span-9",{"className":"hljs-params","children":"self, value"}],"):\n\t",["$","span","span-10",{"className":"hljs-string","children":"\"\"\"\n\tTransform the *outgoing* native value into primitive data.\n\t\"\"\""}],"\n\t",["$","span","span-11",{"className":"hljs-keyword","children":"raise"}]," NotImplementedError(\n\t\t",["$","span","span-12",{"className":"hljs-string","children":"'{cls}.to_representation() must be implemented.\\n'"}],"\n\t\t",["$","span","span-13",{"className":"hljs-string","children":"'If you are upgrading from REST framework version 2 '"}],"\n\t\t",["$","span","span-14",{"className":"hljs-string","children":"'you might want `ReadOnlyField`.'"}],".",["$","span","span-15",{"className":"hljs-built_in","children":"format"}],"(\n\t\t\tcls=self.__class__.__name__\n\t\t)\n\t)\n\n"]}]}],"\n",["$","p","p-14",{"children":[["$","code","code-0",{"children":"to_internal_value"}]," 作用就是把輸入得資料轉換成，你資料庫或者其他地方你想要儲存的型態，像是日期好了，你輸入的是字串，但是rest framework的DatetimeField，是幫你轉成python裡的datetime相關物件， 至於 ",["$","code","code-1",{"children":"to_representation"}]," 就是資料輸出的形式， 一般都是當你call ",["$","code","code-2",{"children":"serializer.data"}]," 所表現的形式就是用到上面那個function， 這裡的serializer是某某Serializer class的instance。"]}],"\n",["$","p","p-15",{"children":"到目前為止，class Field，大致上的實作都大概看過了，這個是很重要的核心，因為你看源碼你會發現，有很多其他東西都是繼承於這個， XXXField 一堆～～"}],"\n",["$","p","p-16",{"children":"這篇就先紀錄到這邊為止，下一次就回到BaseSerializer那邊去理解源碼。"}],"\n",["$","h6","h6-0",{"children":["tags: ",["$","code","code-0",{"children":"python"}]," ",["$","code","code-1",{"children":"restframework"}]]}]]}]}],"$undefined"]}],["$","section",null,{"className":"flex flex-col items-center justify-center space-x-2 mt-20 mb-16 py-10","children":[["$","h2",null,{"className":"text-center text-foreground mb-6 text-xl md:text-3xl font-bold","children":[["$","p",null,{"children":"If you like my content,"}],["$","p",null,{"children":"feel free to buy me a coffee"}]]}],["$","a",null,{"href":"https://www.buymeacoffee.com/jgebang","target":"_blank","rel":"noopener noreferrer","className":"flex items-center justify-center w-16 h-16 rounded-full bg-blue-600 shadow-lg transition-transform transform hover:scale-110","aria-label":"Buy Me a Coffee","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-coffee w-8 h-8 text-white","children":[["$","path","7u0qdc",{"d":"M10 2v2"}],["$","path","6buw04",{"d":"M14 2v2"}],["$","path","pwadti",{"d":"M16 8a1 1 0 0 1 1 1v8a4 4 0 0 1-4 4H7a4 4 0 0 1-4-4V9a1 1 0 0 1 1-1h14a4 4 0 1 1 0 8h-1"}],["$","path","colzsn",{"d":"M6 2v2"}],"$undefined"]}]}]]}]]
a:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"rest framework serializer 深入理解"}],["$","meta","3",{"name":"description","content":"rest framework serializer 深入理解\n這篇主要是記錄一些個人對於rest framework的serializer源碼實作的理解，從下段源碼\n\n可以看到作為ModelSerializer還有一些xxSerializer的base class(Serializer)，是繼承Ba ..."}],["$","meta","4",{"name":"keywords","content":"rest framework"}],["$","link","5",{"rel":"canonical","href":"https://jgebang.com/blog/2016-08-18-understanding-rest-framework-serializer"}],["$","meta","6",{"property":"og:title","content":"rest framework serializer 深入理解"}],["$","meta","7",{"property":"og:description","content":"rest framework serializer 深入理解\n這篇主要是記錄一些個人對於rest framework的serializer源碼實作的理解，從下段源碼\n\n可以看到作為ModelSerializer還有一些xxSerializer的base class(Serializer)，是繼承Ba ..."}],["$","meta","8",{"property":"og:type","content":"article"}],["$","meta","9",{"name":"twitter:card","content":"summary"}],["$","meta","10",{"name":"twitter:title","content":"rest framework serializer 深入理解"}],["$","meta","11",{"name":"twitter:description","content":"rest framework serializer 深入理解\n這篇主要是記錄一些個人對於rest framework的serializer源碼實作的理解，從下段源碼\n\n可以看到作為ModelSerializer還有一些xxSerializer的base class(Serializer)，是繼承Ba ..."}],["$","link","12",{"rel":"icon","href":"/icon.png?84d28c665b2d40e8","type":"image/png","sizes":"501x501"}],["$","meta","13",{"name":"next-size-adjust"}]]
1:null
